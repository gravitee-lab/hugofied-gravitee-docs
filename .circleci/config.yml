
version: 2.1

parameters:
  gio_action:
    type: enum
    enum: [release, martymcfly_mvn_release, pr_build]
    default: pr_build
  dry_run:
    type: boolean
    default: true
    description: "Run in dry run mode?"
  maven_profile_id:
    type: string
    default: "gravitee-dry-run"
    description: "Maven ID of the Maven profile to use for a dry run ?"
  secrethub_org:
    type: string
    default: "gravitee-lab"
    description: "SecretHub Org to use to fetch secrets ?"
  secrethub_repo:
    type: string
    default: "cicd"
    description: "SecretHub Repo to use to fetch secrets ?"
orbs:
  gravitee: gravitee-io/gravitee@dev:1.0.4
  secrethub: secrethub/cli@1.0

jobs:
  hugo_express_dock:
    machine:
      image: 'ubuntu-1604:201903-01'
      resource_class: medium
    environment:
      HUGO_VERSION: '0.78.2'
    steps:
      # - checkout
      - run:
          name: "Install HUGO version [${HUGO_VERSION}]"
          command: |
                    export HUGO_VERSION=${HUGO_VERSION:-'0.78.2'}
                    export HUGO_OS=Linux
                    export HUGO_CPU_ARCH=64bit
                    echo "Install Hugo version [${HUGO_VERSION}]"
                    curl -LO https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_${HUGO_OS}-${HUGO_CPU_ARCH}.deb
                    sudo dpkg -i hugo_${HUGO_VERSION}_${HUGO_OS}-${HUGO_CPU_ARCH}.deb && sudo apt-get install -y
                    hugo version
      - secrethub/install
      - gravitee/git_config:
          secrethub_org: << pipeline.parameters.secrethub_org >>
          secrethub_repo: << pipeline.parameters.secrethub_repo >>
      - run:
          name: "Back in time release [${BACK_IN_TIME_VERSION}]"
          command: |
                    echo "BACK_IN_TIME_VERSION=[${BACK_IN_TIME_VERSION}]"
                    echo "This job was used ONCE to 'release again' the [1.1.2] versio the [gravitee-licence]"
                    echo "It could inspire a more general purpose Job, but it's not yet reusable as-is"
                    if [ -d ./.circleci ]; then
                      rm -fr ./circleci
                    fi
                    if [ -d ./graviteebot ]; then
                      rm -fr ./graviteebot
                    fi
                    # there i will have to rm some files for sure
                    ls -allh .
                    git clone git@github.com:gravitee-lab3/hugo-cheatsheet.git .
                    git checkout feature/github-auth
                    rm -fr ./.git/
                    npm i
                    rm -fr ./hugo
                    mkdir-p ./hugo
                    git clone git@github.com:gravitee-lab3/hugo-cheatsheet.git ./hugo
                    npm run build

workflows:
  version: 2.1
  build_n_deploy:
    when:
      equal: [ pr_build, << pipeline.parameters.gio_action >> ]
    jobs:
      - hugo_express_dock:
          context: cicd-orchestrator
